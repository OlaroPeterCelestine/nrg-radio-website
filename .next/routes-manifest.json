{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/proxy/[...path]",
      "regex": "^/api/proxy/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPpath": "nxtPpath"
      },
      "namedRegex": "^/api/proxy/(?<nxtPpath>.+?)(?:/)?$"
    },
    {
      "page": "/news/[id]",
      "regex": "^/news/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/news/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/clients",
      "regex": "^/clients(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/clients(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/events",
      "regex": "^/events(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/events(?:/)?$"
    },
    {
      "page": "/favicon-test",
      "regex": "^/favicon\\-test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\-test(?:/)?$"
    },
    {
      "page": "/listen",
      "regex": "^/listen(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/listen(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/news",
      "regex": "^/news(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/news(?:/)?$"
    },
    {
      "page": "/shop",
      "regex": "^/shop(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shop(?:/)?$"
    },
    {
      "page": "/shows",
      "regex": "^/shows(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shows(?:/)?$"
    },
    {
      "page": "/stream-test",
      "regex": "^/stream\\-test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/stream\\-test(?:/)?$"
    },
    {
      "page": "/video",
      "regex": "^/video(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/video(?:/)?$"
    },
    {
      "page": "/watch",
      "regex": "^/watch(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/watch(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}